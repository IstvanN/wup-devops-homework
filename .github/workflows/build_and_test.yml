name: CI/CD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
        
      - name: Test project with Maven
        run: mvn clean test

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  build_and_publish_docker_image:
    name: Build docker image and publish to DockerHub
    runs-on: ubuntu-latest 
    needs: [test]
    env:
      S3_BUCKET: wup-hw
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: wup-hw
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Upload Dockerrun to s3
        run: |
          aws s3 cp Dockerrun.aws.json s3://${{ env.S3_BUCKET }}/Dockerrun.aws.json
      
      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
      
  # deploy_to_eb:
  #   name: Deploy to Elastic Beanstalk
  #   runs-on: ubuntu-latest
  #   needs: [build_and_publish_docker_image]
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  #     S3_BUCKET: wup-hw
  #     APP_NAME: wup-hw
  #     ENV_NAME: Wuphw-env
  #   steps:
  #     - name: Get timestamp
  #       uses: gerred/actions/current-time@master
  #       id: current-time

  #     - name: Run string replace
  #       uses: frabert/replace-string-action@master
  #       id: format-time
  #       with:
  #         pattern: '[:\.]+'
  #         string: "${{ steps.current-time.outputs.time }}"
  #         replace-with: '-'
  #         flags: 'g'

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
  #         aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  #     - name: Deploy to Elastic Beantalk
  #       run: |

  #         aws elasticbeanstalk create-application-version --application-name ${{ env.APP_NAME }} \
  #           --version-label "app-version-${{ steps.format-time.outputs.replaced }}" \
  #           --source-bundle S3Bucket=${{ env.S3_BUCKET }},S3Key=Dockerrun.aws.json \
  #           --description "${{ github.event.head_commit.message }}"

  #         aws elasticbeanstalk update-environment --application-name ${{ env.APP_NAME }} \
  #           --environment-name ${{ env.ENV_NAME }} \
  #           --solution-stack-name "64bit Amazon Linux 2 v3.4.17 running Docker" \
  #           --version-label "app-version-${{ steps.format-time.outputs.replaced }}"

